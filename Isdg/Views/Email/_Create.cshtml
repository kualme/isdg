@model Isdg.Core.Data.EmailAccount

@using (Ajax.BeginForm("CreateEditEmailAccount", "Email", new AjaxOptions()
{
    UpdateTargetId = "emailAccounts"    
}))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h5>Add email account</h5>
        <hr />
        <div class="emailAccount__form_add">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>
            
            <div class="form-group">
                @Html.LabelFor(model => model.DisplayName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">                    
                    @Html.EditorFor(model => model.DisplayName)
                    @Html.ValidationMessageFor(model => model.DisplayName, "", new { @class = "text-danger" })                    
                </div>
            </div>
            
            <div class="form-group">
                @Html.LabelFor(model => model.Host, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">                    
                    @Html.EditorFor(model => model.Host)
                    @Html.ValidationMessageFor(model => model.Host, "", new { @class = "text-danger" })                    
                </div>
            </div>
        
            <div class="form-group">
                @Html.LabelFor(model => model.Port, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">                    
                    @Html.EditorFor(model => model.Port)
                    @Html.ValidationMessageFor(model => model.Port, "", new { @class = "text-danger" })                    
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">                    
                    @Html.EditorFor(model => model.Username)
                    @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })                    
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">                    
                    @Html.PasswordFor(model => model.Password)
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })                    
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.EnableSsl, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.EnableSsl)
                        @Html.ValidationMessageFor(model => model.EnableSsl, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default btn-sm" onclick="closeFormOnButton('emailAccount__form_add', this)" />
                </div>
            </div>        
            <hr />
        </div>        
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
