@model Isdg.Core.Data.Meeting
<div class="meeting__edit hidden">
@using (Ajax.BeginForm("CreateEditMeeting", "Meetings", new AjaxOptions()
{
    UpdateTargetId = "meeting_id_" + Model.Id    
}))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">        
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => Model.Id)
                        
        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Href, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Href, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Href, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Place, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Place, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Place, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
                <span class="hint">Date in format mm/dd/yyyy</span>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
                <span class="hint">Date in format mm/dd/yyyy</span>
            </div>
        </div>

        @if (Isdg.Lib.UserHelper.IsAdmin()) 
        {
            <div class="form-group">
                @Html.LabelFor(model => Model.IsPublished, htmlAttributes: new { @class = "control-label col-md-1" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => Model.IsPublished)                    
                    </div>
                </div>
            </div>
        } 
        else
        {
            @Html.HiddenFor(model => Model.IsPublished)    
        }

        <div class="form-group">
            <div class="col-md-offset-1 col-md-10">
                <input type="submit" value="Save" class="btn btn-default btn-sm" />
                <input type="button" value="Cancel" class="btn btn-default btn-sm" onclick="closeFormOnButton('meeting__edit', this)" />
            </div>
        </div>
        <hr />
    </div>
}
</div>
