@model Isdg.Core.Data.Meeting

@using (Ajax.BeginForm("CreateEditMeeting", "Meetings", new AjaxOptions()
{
    UpdateTargetId = "meetings",
    InsertionMode = InsertionMode.InsertBefore,
    OnSuccess = Isdg.Lib.UserHelper.IsAdmin() ? "" : "showSuccessMessage('meeting__form_add', 'Meeting')",
    OnComplete = "hideSpinner()",
    OnBegin = "showSpinner()"
}))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">        
        <a role="button" class="meeting__add_open" onclick="openCreationForm('meeting')">Add meeting <span class="fa fa-angle-double-down"></span></a>        
        <hr />
        <div class="meeting__form_add" style="display: none;">            
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-1" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Href, htmlAttributes: new { @class = "control-label col-md-1" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Href, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Href, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Place, htmlAttributes: new { @class = "control-label col-md-1" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Place, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Place, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-1" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
                    <span class="hint">Date in format mm/dd/yyyy</span>
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label col-md-1" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
                    <span class="hint">Date in format mm/dd/yyyy</span>
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-1 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" /><i class="fa fa-spinner fa-spin fa-lg fa-fw hidden"></i>                 
                </div>
            </div>
            <div class="text-success success-message hidden"></div>        
            <hr />
        </div>        
        <a role="button" class="meeting__add_close" style="display: none;" onclick="closeCreationForm('meeting')">Add meeting <span class="fa fa-angle-double-up"></span></a>        
    </div>
}
